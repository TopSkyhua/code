package ${package.Controller};

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import cn.rc100.common.core.util.R;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.security.access.prepost.PreAuthorize;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@AllArgsConstructor
##@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${swagger2})
@Api(value = "$!{table.entityPath}", tags = "$!{table.comment}")
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private final ${table.entityName}Service ${table.entityPath}Service;

    /***
     * <p>
     * 分页查询
     * </p>
     *
     * @param page 分页对象
     * @param ${table.entityPath} ${table.comment}
     * @return R
     * @author ${author} 
     * @since ${date}
     */
    @GetMapping("/page")
    #if(${swagger2})
    @ApiOperation(value = "分页对象", notes = "分页对象")
    #end
    public R get${table.entityName}Page(Page page, ${table.entityName} ${table.entityPath}) {
        return R.ok(${table.entityPath}Service.page(page, Wrappers.query(${table.entityPath})));
    }

    /**
     * <p>
     * 通过id查询${table.comment}
     * </p>
     *
     * @param id id
     * @return R  
     * @author ${author} 
     * @since ${date}
     */
    @GetMapping("/{id}")
    #if(${swagger2})
    @ApiOperation(value = "通过id查询${table.comment}", notes = "通过id查询${table.comment}")
    #end
    public R getById(@PathVariable("id" ) Integer id) {
        return R.ok(${table.entityPath}Service.getById(id));
    }

    /**
     * <p>
     * 新增${table.comment}
     * </p>
     *
     * @param ${table.entityPath} ${table.comment}
     * @return R
     * @author ${author} 
     * @since ${date}
     */
    @PostMapping
    @PreAuthorize("@pms.hasPermission('$!{table.name}_add')")
    #if(${swagger2})
    @ApiOperation(value = "新增${table.comment}", notes = "新增${table.comment}")
    #end
    public R save(@RequestBody ${table.entityName} ${table.entityPath}) {
        return R.ok(${table.entityPath}Service.save(${table.entityPath}));
    }

    /**
     * <p>
     * 修改${table.comment}
     * </p>
     *
     * @param ${table.entityPath} ${table.comment}
     * @return R
     * @author ${author} 
     * @since ${date}
     */
    @PutMapping
    @PreAuthorize("@pms.hasPermission('$!{table.name}_edit')")
    #if(${swagger2})
    @ApiOperation(value = "修改${table.comment}", notes = "修改${table.comment}")
    #end
    public R updateById(@RequestBody ${table.entityName} ${table.entityPath}) {
        return R.ok(${table.entityPath}Service.updateById(${table.entityPath}));
    }

    /**
     * <p>
     * 通过id删除${table.comment}
     * </p>
     *
     * @param id id
     * @return R
     * @author ${author} 
     * @since ${date}
     */
    @DeleteMapping("/{id}" )
    @PreAuthorize("@pms.hasPermission('$!{table.name}_del')")
    #if(${swagger2})
    @ApiOperation(value = "通过id删除${table.comment}", notes = "通过id删除${table.comment}")
    #end
    public R removeById(@PathVariable Integer id) {
        return R.ok(${table.entityPath}Service.removeById(id));
    }
}

#end